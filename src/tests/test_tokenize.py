##
# @file test_tokenize.py
# @brief Tests for tokenize function
# @author Radim Mifka (xmifka00)
# @date April 2023

from calculator import tokenize


def test_tokenize_base():
    assert tokenize("") == []
    assert tokenize("1") == ['1']
    assert tokenize("1534") == ['1534']
    assert tokenize("-1534") == ['-1534']
    assert tokenize("1.5") == ['1.5']
    assert tokenize("-1.5") == ['-1.5']
    assert tokenize("--1") == ['-', '-1']
    assert tokenize("(4)") == ['(', '4', ')']
    assert tokenize("(400)") == ['(', '400', ')']
    assert tokenize("400!") == ['400', '!']
    assert tokenize(".5") == ['0.5']


def test_tokenize_addition():
    assert tokenize("400!+2!") == ['400', '!', '+', '2', '!']
    assert tokenize("1+2+3") == ['1', '+', '2', '+', '3']
    assert tokenize(
        "1+2+3+4+5+6+7") == ['1', '+', '2', '+', '3', '+', '4', '+', '5', '+', '6', '+', '7']
    assert tokenize(
        "1223+2414+3135+4090+52313+6123+7123123") == ['1223', '+', '2414', '+', '3135', '+', '4090', '+', '52313', '+', '6123', '+', '7123123']

    assert tokenize("1+2") == ['1', '+', '2']
    assert tokenize("1013+2231") == ['1013', '+', '2231']
    assert tokenize("10.13+22.31") == ['10.13', '+', '22.31']
    assert tokenize(
        "10.13+22.31+11.3") == ['10.13', '+', '22.31', '+', '11.3']
    assert tokenize(".5 + .3") == ['0.5', '+', '0.3']


def test_tokenize_substraction():
    assert tokenize("1-2-3") == ['1', '-', '2', '-', '3']
    assert tokenize(
        "1-2-3-4-5-6-7") == ['1', '-', '2', '-', '3', '-', '4', '-', '5', '-', '6', '-', '7']
    assert tokenize(
        "1223-2414-3135-4090-52313-6123-7123123") == ['1223', '-', '2414', '-', '3135', '-', '4090', '-', '52313', '-', '6123', '-', '7123123']

    assert tokenize("1-2") == ['1', '-', '2']
    assert tokenize("1013-2231") == ['1013', '-', '2231']
    assert tokenize("-1013-2231") == ['-1013', '-', '2231']
    assert tokenize(
        "-1013-(-2231)") == ['-1013', '-', '(', '-2231', ')']
    assert tokenize("10.13-22.31") == ['10.13', '-', '22.31']


def test_tokenize_multiplication():
    assert tokenize("4(423)") == ['4', '*', '(', '423', ')']
    assert tokenize("4.1(4.2)") == ['4.1', '*', '(', '4.2', ')']
    assert tokenize("4(42)(41)") == [
        '4', '*', '(', '42', ')', '*', '(', '41', ')']
    assert tokenize("(4)4") == ['(', '4', ')', '*', '4']
    assert tokenize("(4)(4)") == [
        '(', '4', ')', '*', '(', '4', ')']
    assert tokenize("1*2*3") == ['1', '*', '2', '*', '3']
    assert tokenize(
        "1*2*3*4*5*6*7") == ['1', '*', '2', '*', '3', '*', '4', '*', '5', '*', '6', '*', '7']
    assert tokenize(
        "1223*2414*3135*4090*52313*6123*7123123") == ['1223', '*', '2414', '*', '3135', '*', '4090', '*', '52313', '*', '6123', '*', '7123123']

    assert tokenize("1*2") == ['1', '*', '2']
    assert tokenize("1013*2231") == ['1013', '*', '2231']
    assert tokenize("10.13*22.31") == ['10.13', '*', '22.31']
    assert tokenize(
        "10.13*22.31*11.3") == ['10.13', '*', '22.31', '*', '11.3']

    assert tokenize(
        "(3+4)*(5-6)") == ['(', '3', '+', '4', ')', '*', '(', '5', '-', '6', ')']
    assert tokenize("(2+3)(4-5)(6+7)") == [
        '(', '2', '+', '3', ')', '*', '(', '4', '-', '5', ')', '*', '(', '6', '+', '7', ')']
    assert tokenize("(8+9)(10-11)(12+13)(14-15)") == [
        '(', '8', '+', '9', ')', '*', '(', '10', '-', '11', ')', '*', '(', '12', '+', '13', ')', '*', '(', '14', '-', '15', ')']
    assert tokenize("2(3(4(5(6))))") == [
        '2', '*', '(', '3', '*', '(', '4', '*', '(', '5', '*', '(', '6', ')', ')', ')', ')']
    assert tokenize("(1+2)(3+4)(5+6)(7+8)(9+10)") == ['(', '1', '+', '2', ')', '*', '(', '3', '+',
                                                      '4', ')', '*', '(', '5', '+', '6', ')', '*', '(', '7', '+', '8', ')', '*', '(', '9', '+', '10', ')']


def test_tokenize_log():
    assert tokenize("log3") == ['log', '10', '3']
    assert tokenize("log2(10)") == ['log', '2', '(', '10', ')']
    assert tokenize("log400ln20") == ['log', '10', '400', '*', 'ln', '20']
    assert tokenize("ln400ln20") == ['ln', '400', '*', 'ln', '20']
    assert tokenize("ln400log20") == ['ln', '400', '*', 'log', '10', '20']
    assert tokenize("log(100)") == ['log', '10', '(', '100', ')']
    assert tokenize(
        "log10+log20") == ['log', '10', '10', '+', 'log', '10', '20']
    assert tokenize("ln(100)") == ['ln', '(', '100', ')']
    assert tokenize("ln2+ln3") == ['ln', '2', '+', 'ln', '3']
    assert tokenize("3(log3)") == ['3', '*', '(', 'log', '10', '3', ')']
    assert tokenize("3log3") == ['3', '*', 'log', '10', '3']


def test_tokenize_mod():
    assert tokenize("3%2") == ['3', '%', '2']
    assert tokenize("27%5") == ['27', '%', '5']
    assert tokenize("1000%25") == ['1000', '%', '25']
    assert tokenize(
        "10+15%3-27%5") == ['10', '+', '15', '%', '3', '-', '27', '%', '5']


def test_tokenize_exponents():
    assert tokenize("2^3") == ['2', '^', '3']
    assert tokenize("-2^3") == ['-2', '^', '3']
    assert tokenize("2^-3") == ['2', '^', '-3']
    assert tokenize("-2^-3") == ['-2', '^', '-3']
    assert tokenize("2.5^3.5") == ['2.5', '^', '3.5']
    assert tokenize("2^3^4") == ['2', '^', '3', '^', '4']


def test_tokenize_root():
    assert tokenize("2√3") == ['2', '√', '3']
    assert tokenize("√3") == ['2', '√', '3']
    assert tokenize("(-2)√3") == ['(', '-2', ')', '√', '3']
    assert tokenize("2-3*2+√3") == ['2', '-',
                                    '3', '*', '2', '+', '2', '√', '3']
    assert tokenize("3√-3") == ['3', '√', '-3']
    assert tokenize("-2√3") == ['-2', '√', '3']
    assert tokenize("2√-3") == ['2', '√', '-3']
    assert tokenize("-2√-3") == ['-2', '√', '-3']
    assert tokenize("2.5√3.5") == ['2.5', '√', '3.5']
    assert tokenize("2√3√4") == ['2', '√', '3', '√', '4']
    assert tokenize("2√(2+2)") == ['2', '√', '(', '2', '+', '2', ')']
    assert tokenize("3√(5+2√3)") == ['3', '√',
                                     '(', '5', '+', '2', '√', '3', ')']
    assert tokenize(
        "(√5+2)√(3+√2)") == ['(', '2', '√', '5', '+', '2', ')', '√', '(', '3', '+', '2', '√', '2', ')']
    assert tokenize("(√2+√3)√(3-√2)") == ['(', '2', '√', '2',
                                          '+', '2', '√', '3', ')', '√', '(', '3', '-', '2', '√', '2', ')']
    assert tokenize("2√(8-2√7)") == ['2', '√',
                                     '(', '8', '-', '2', '√', '7', ')']
    assert tokenize("(√3+√2)√(5-√6)") == ['(', '2', '√', '3',
                                          '+', '2', '√', '2', ')', '√', '(', '5', '-', '2', '√', '6', ')']
    assert tokenize("2√(2+3√2)√(3-2√2)") == ['2', '√', '(', '2', '+',
                                             '3', '√', '2', ')', '√', '(', '3', '-', '2', '√', '2', ')']
    assert tokenize("(√2+√3)√(3-√2)+4√(2+√3)") == ['(', '2', '√', '2', '+', '2', '√', '3', ')',
                                                   '√', '(', '3', '-', '2', '√', '2', ')', '+', '4', '√', '(', '2', '+', '2', '√', '3', ')']


def test_tokenize_brackets():
    assert tokenize("(1+2)") == ['(', '1', '+', '2', ')']
    assert tokenize(
        "((1+2))") == ['(', '(', '1', '+', '2', ')', ')']
    assert tokenize(
        "((1+2)*(3+4))") == ['(', '(', '1', '+', '2', ')', '*', '(', '3', '+', '4', ')', ')']


def test_tokenize_division():
    assert tokenize("4÷2") == ['4', '÷', '2']
    assert tokenize("10.13÷22.31") == ['10.13', '÷', '22.31']
    assert tokenize("10.13÷22.31÷11.3") == [
        '10.13', '÷', '22.31', '÷', '11.3']
    assert tokenize("10.13÷(22.31÷11.3)") == [
        '10.13', '÷', '(', '22.31', '÷', '11.3', ')']
    assert tokenize("(10.13÷22.31)÷11.3") == [
        '(', '10.13', '÷', '22.31', ')', '÷', '11.3']
    assert tokenize("10.13÷-22.31") == ['10.13', '÷', '-22.31']


def test_tokenize_multiple_operators():
    assert tokenize("10.13***22.31") == ['10.13', '*', '22.31']
    assert tokenize("10.13+++22.31") == ['10.13', '+', '22.31']
    assert tokenize(
        "10.13+++22.31****23") == ['10.13', '+', '22.31', '*', '23']
    assert tokenize("10.13÷÷÷÷÷÷22.31") == ['10.13', '÷', '22.31']


def test_tokenize_complex():
    assert tokenize(
        "1+2*3-4%2") == ['1', '+', '2', '*', '3', '-', '4', '%', '2']
    assert tokenize("2^3%3") == ['2', '^', '3', '%', '3']
    assert tokenize("log10+2*(3-4)+(10%3)") == [
        'log', '10', '10', '+', '2', '*', '(', '3', '-', '4', ')', '+', '(', '10', '%', '3', ')']
    assert tokenize("2^3^2") == ['2', '^', '3', '^', '2']
    assert tokenize(
        "log3(10)2+3*3") == ['log', '3', '(', '10', ')', '*', '2', '+', '3', '*', '3']
    assert tokenize("13(2)-3(5)log2(3)") == ['13', '*', '(', '2', ')',
                                             '-', '3', '*', '(', '5', ')', '*', 'log', '2', '(', '3', ')']
    assert tokenize("13(2)(-3)(5)log2(3)") == ['13', '*', '(', '2', ')', '*',
                                               '(', '-3', ')', '*', '(', '5', ')', '*', 'log', '2', '(', '3', ')']
